// <auto-generated />
using System;
using KYS.Data.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KYS.Data.Migrations
{
    [DbContext(typeof(NetContext))]
    partial class NetContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KYS.Entity.AppVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DownloadUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VersionNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppVersions");
                });

            modelBuilder.Entity("KYS.Entity.AracBilgi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AracDosemeBilgileri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AracMarkasi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("AtolyeGirisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("FirmaId")
                        .HasColumnType("int");

                    b.Property<string>("Fiyat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IlgiliKisi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IlgiliKisiTel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsEmriNo")
                        .HasColumnType("int");

                    b.Property<int?>("KayitAcanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("KayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModelYili")
                        .HasColumnType("int");

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.Property<string>("MusteriOzelIstekleri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OdemeSekli")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonelID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ProjeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("SaseNumarasi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SiparisDurumu")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SiparisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("TeklifDurumu")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("TeslimTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("TeslimYeri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TicariAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipOnayNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Varyant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Versiyon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YapilanTadilat")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FirmaId");

                    b.HasIndex("MusteriId");

                    b.HasIndex("PersonelID");

                    b.ToTable("AracBilgileri");
                });

            modelBuilder.Entity("KYS.Entity.AracForm", b =>
                {
                    b.Property<int>("AracFormID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AracFormID"));

                    b.Property<int>("AracId")
                        .HasColumnType("int");

                    b.Property<string>("FaturasiLinki")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FotografDurumu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsEmriFormu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsEmriveUrunIzlemeFormu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KontrolFormuLinki")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjeDosyasiLinki")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuhsatLinki")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiparisBilgiFormu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UruneBagliSartlariGozdenGecirmeFormu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AracFormID");

                    b.HasIndex("AracId");

                    b.ToTable("AracForms");
                });

            modelBuilder.Entity("KYS.Entity.Ayar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AyarAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AyarSet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirmaAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FirmaId")
                        .HasColumnType("int");

                    b.Property<bool?>("TamamlanmaDurumu")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Ayarlar");
                });

            modelBuilder.Entity("KYS.Entity.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("KYS.Entity.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("FirmaId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("FirmaId");

                    b.ToTable("CartItem");
                });

            modelBuilder.Entity("KYS.Entity.Cihaz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CihazAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CihazKodu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FirmaId")
                        .HasColumnType("int");

                    b.Property<string>("Hassasiyet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Markasi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modeli")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Not")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SatinAlinanFirma")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SatinAlmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("SeriNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FirmaId");

                    b.ToTable("Cihazlar");
                });

            modelBuilder.Entity("KYS.Entity.CihazKalibrasyon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CihazId")
                        .HasColumnType("int");

                    b.Property<int?>("FirmaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GelecekKalibrasyonTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Hatirlatma")
                        .HasColumnType("bit");

                    b.Property<string>("KalibrasyonPeriyodu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KalibrasyonSonucu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("KalibrasyonTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("KalibrasyonYapildiğiYer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KaliteSorumlusuId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CihazId");

                    b.HasIndex("FirmaId");

                    b.HasIndex("KaliteSorumlusuId");

                    b.ToTable("CihazKalibrasyonLari");
                });

            modelBuilder.Entity("KYS.Entity.Departman", b =>
                {
                    b.Property<int>("DepartmanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmanID"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmanAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DepartmanDurumu")
                        .HasColumnType("bit");

                    b.Property<int?>("FirmaId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonelID")
                        .HasColumnType("int");

                    b.Property<int?>("YoneticiId")
                        .HasColumnType("int");

                    b.HasKey("DepartmanID");

                    b.HasIndex("FirmaId");

                    b.HasIndex("PersonelID");

                    b.HasIndex("YoneticiId");

                    b.ToTable("Departmanlar");
                });

            modelBuilder.Entity("KYS.Entity.DepartmanYonetici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmanId")
                        .HasColumnType("int");

                    b.Property<int>("FirmaId")
                        .HasColumnType("int");

                    b.Property<int>("YoneticiPersonelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmanId");

                    b.HasIndex("FirmaId");

                    b.HasIndex("YoneticiPersonelId");

                    b.ToTable("DepartmanYoneticileri");
                });

            modelBuilder.Entity("KYS.Entity.Dokuman", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DokumanAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DokumanNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Dosya")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("DosyaAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DosyaLinki")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Durumu")
                        .HasColumnType("bit");

                    b.Property<string>("FirmaAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FirmaId")
                        .HasColumnType("int");

                    b.Property<string>("FirmaKisaAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FirmaKodu")
                        .HasColumnType("int");

                    b.Property<string>("Hazirlayan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kategori")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RetSebebi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RevizyonNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RevizyonTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaslakAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YapilanDegisiklikler")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YururlulukOnayDurumu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YururlulukOnayi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("YururlulukTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Dokumanlar");
                });

            modelBuilder.Entity("KYS.Entity.Egitim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("EgitimTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("EgitimVeren")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FirmaId")
                        .HasColumnType("int");

                    b.Property<string>("Konusu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<string>("Saat")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FirmaId");

                    b.HasIndex("PersonelId");

                    b.ToTable("Egitimler");
                });

            modelBuilder.Entity("KYS.Entity.Firma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CepTel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirmaAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirmaAdiKisaKodu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirmaAdresi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FirmaKodu")
                        .HasColumnType("int");

                    b.Property<string>("FirmaTel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirmaYetkilisi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Iso9001")
                        .HasColumnType("bit");

                    b.Property<string>("KYSSorumlusuAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KYSSorumlusuSoyAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KYSYoneticisiAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KYSYoneticisiSoyAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Sozlesme")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("VergiNumarasi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Firmalar");
                });

            modelBuilder.Entity("KYS.Entity.FirmaKontrolMadde", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FirmaId")
                        .HasColumnType("int");

                    b.Property<string>("FormAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IslemiYapanUsta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Kabul")
                        .HasColumnType("bit");

                    b.Property<string>("KontrolMaddesi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Ret")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FirmaId");

                    b.ToTable("FirmaKontrolMaddeleri");
                });

            modelBuilder.Entity("KYS.Entity.Fotograf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AracBilgiId")
                        .HasColumnType("int");

                    b.Property<string>("DosyaAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FirmaId")
                        .HasColumnType("int");

                    b.Property<string>("GorselLinki")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AracBilgiId");

                    b.HasIndex("FirmaId");

                    b.ToTable("Fotograflar");
                });

            modelBuilder.Entity("KYS.Entity.GelenMalzeme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Birim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaturaNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FirmaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GelisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("KontrolKriterleri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MalzemeAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Miktar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OnayPersonelId")
                        .HasColumnType("int");

                    b.Property<int>("PersonelID")
                        .HasColumnType("int");

                    b.Property<string>("Tedarikci")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FirmaId");

                    b.HasIndex("PersonelID");

                    b.ToTable("GelenMalzemeler");
                });

            modelBuilder.Entity("KYS.Entity.Musteri", b =>
                {
                    b.Property<int>("MusteriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MusteriId"));

                    b.Property<string>("CepTel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FirmaId")
                        .HasColumnType("int");

                    b.Property<string>("MusteriAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MusteriAdresi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MusteriId");

                    b.HasIndex("FirmaId");

                    b.ToTable("Musteriler");
                });

            modelBuilder.Entity("KYS.Entity.Onay", b =>
                {
                    b.Property<int>("OnayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OnayId"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DokumanId")
                        .HasColumnType("int");

                    b.Property<int>("FirmaId")
                        .HasColumnType("int");

                    b.Property<string>("OnayDurumu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OnayTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("OnayaGelenTarih")
                        .HasColumnType("datetime2");

                    b.Property<int>("OnaylayanId")
                        .HasColumnType("int");

                    b.HasKey("OnayId");

                    b.HasIndex("DokumanId");

                    b.HasIndex("FirmaId");

                    b.HasIndex("OnaylayanId");

                    b.ToTable("Onaylar");
                });

            modelBuilder.Entity("KYS.Entity.Personel", b =>
                {
                    b.Property<int>("PersonelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PersonelID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonelID"));

                    b.Property<string>("Adi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartmanID")
                        .HasColumnType("int");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FirmaId")
                        .HasColumnType("int");

                    b.Property<int>("FirmaKodu")
                        .HasColumnType("int");

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciRolu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OnayGrubu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OnayYetkisi")
                        .HasColumnType("bit");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyadi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unvan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UstYoneticiID")
                        .HasColumnType("int");

                    b.HasKey("PersonelID");

                    b.HasIndex("DepartmanID");

                    b.HasIndex("FirmaId");

                    b.HasIndex("UstYoneticiID");

                    b.ToTable("Personeller");
                });

            modelBuilder.Entity("KYS.Entity.Tanim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FirmaId")
                        .HasColumnType("int");

                    b.Property<string>("KisaTanimi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tanimi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Turu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FirmaId");

                    b.ToTable("Tanimlar");
                });

            modelBuilder.Entity("KYS.Entity.Vekalet", b =>
                {
                    b.Property<int>("VekaletID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VekaletID"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BaslangicTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BitisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("FirmaId")
                        .HasColumnType("int");

                    b.Property<int>("VekaletiAlanPersonelId")
                        .HasColumnType("int");

                    b.Property<int>("VekaletiVerenPersonelId")
                        .HasColumnType("int");

                    b.Property<bool>("vekalet")
                        .HasColumnType("bit");

                    b.HasKey("VekaletID");

                    b.HasIndex("FirmaId");

                    b.HasIndex("VekaletiAlanPersonelId");

                    b.HasIndex("VekaletiVerenPersonelId");

                    b.ToTable("Vekaletler");
                });

            modelBuilder.Entity("KYS.Entity.AracBilgi", b =>
                {
                    b.HasOne("KYS.Entity.Firma", "Firma")
                        .WithMany("AracBilgileri")
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("KYS.Entity.Musteri", "Musteri")
                        .WithMany("Araclar")
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("KYS.Entity.Personel", "Personel")
                        .WithMany("AracBilgileri")
                        .HasForeignKey("PersonelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Firma");

                    b.Navigation("Musteri");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("KYS.Entity.AracForm", b =>
                {
                    b.HasOne("KYS.Entity.AracBilgi", "AracBilgi")
                        .WithMany("AracFormlari")
                        .HasForeignKey("AracId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AracBilgi");
                });

            modelBuilder.Entity("KYS.Entity.CartItem", b =>
                {
                    b.HasOne("KYS.Entity.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KYS.Entity.Firma", "Firma")
                        .WithMany()
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Firma");
                });

            modelBuilder.Entity("KYS.Entity.Cihaz", b =>
                {
                    b.HasOne("KYS.Entity.Firma", "Firma")
                        .WithMany("Cihazlar")
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Firma");
                });

            modelBuilder.Entity("KYS.Entity.CihazKalibrasyon", b =>
                {
                    b.HasOne("KYS.Entity.Cihaz", "Cihaz")
                        .WithMany("CihazKalibrasyonlari")
                        .HasForeignKey("CihazId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KYS.Entity.Firma", "Firma")
                        .WithMany()
                        .HasForeignKey("FirmaId");

                    b.HasOne("KYS.Entity.Personel", "Personel")
                        .WithMany("CihazKalibrasyonlari")
                        .HasForeignKey("KaliteSorumlusuId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Cihaz");

                    b.Navigation("Firma");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("KYS.Entity.Departman", b =>
                {
                    b.HasOne("KYS.Entity.Firma", "Firma")
                        .WithMany("Departmanlar")
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("KYS.Entity.Personel", null)
                        .WithMany("Departmanlar")
                        .HasForeignKey("PersonelID");

                    b.HasOne("KYS.Entity.Personel", "Yonetici")
                        .WithMany()
                        .HasForeignKey("YoneticiId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Firma");

                    b.Navigation("Yonetici");
                });

            modelBuilder.Entity("KYS.Entity.DepartmanYonetici", b =>
                {
                    b.HasOne("KYS.Entity.Departman", "Departman")
                        .WithMany("Yoneticiler")
                        .HasForeignKey("DepartmanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KYS.Entity.Firma", "Firma")
                        .WithMany("DepartmanYoneticileri")
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KYS.Entity.Personel", "YoneticiPersonel")
                        .WithMany("DepartmanYoneticileri")
                        .HasForeignKey("YoneticiPersonelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Departman");

                    b.Navigation("Firma");

                    b.Navigation("YoneticiPersonel");
                });

            modelBuilder.Entity("KYS.Entity.Egitim", b =>
                {
                    b.HasOne("KYS.Entity.Firma", "Firma")
                        .WithMany("Egitimler")
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KYS.Entity.Personel", "Personel")
                        .WithMany("Egitimler")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Firma");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("KYS.Entity.FirmaKontrolMadde", b =>
                {
                    b.HasOne("KYS.Entity.Firma", "Firma")
                        .WithMany("kontrolMaddeleri")
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Firma");
                });

            modelBuilder.Entity("KYS.Entity.Fotograf", b =>
                {
                    b.HasOne("KYS.Entity.AracBilgi", "AracBilgi")
                        .WithMany("Fotograflar")
                        .HasForeignKey("AracBilgiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KYS.Entity.Firma", "Firma")
                        .WithMany("Fotograflar")
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AracBilgi");

                    b.Navigation("Firma");
                });

            modelBuilder.Entity("KYS.Entity.GelenMalzeme", b =>
                {
                    b.HasOne("KYS.Entity.Firma", null)
                        .WithMany("GelenMalzemeler")
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KYS.Entity.Personel", "Personel")
                        .WithMany("GelenMalzemeler")
                        .HasForeignKey("PersonelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("KYS.Entity.Musteri", b =>
                {
                    b.HasOne("KYS.Entity.Firma", "Firma")
                        .WithMany()
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Firma");
                });

            modelBuilder.Entity("KYS.Entity.Onay", b =>
                {
                    b.HasOne("KYS.Entity.Dokuman", "Dokuman")
                        .WithMany("DokumanOnaylar")
                        .HasForeignKey("DokumanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KYS.Entity.Firma", "Firma")
                        .WithMany("Onaylar")
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KYS.Entity.DepartmanYonetici", "Onaylayan")
                        .WithMany()
                        .HasForeignKey("OnaylayanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dokuman");

                    b.Navigation("Firma");

                    b.Navigation("Onaylayan");
                });

            modelBuilder.Entity("KYS.Entity.Personel", b =>
                {
                    b.HasOne("KYS.Entity.Departman", "Departman")
                        .WithMany("Personeller")
                        .HasForeignKey("DepartmanID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("KYS.Entity.Firma", "Firma")
                        .WithMany("Personeller")
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KYS.Entity.Personel", "UstYonetici")
                        .WithMany()
                        .HasForeignKey("UstYoneticiID");

                    b.Navigation("Departman");

                    b.Navigation("Firma");

                    b.Navigation("UstYonetici");
                });

            modelBuilder.Entity("KYS.Entity.Tanim", b =>
                {
                    b.HasOne("KYS.Entity.Firma", "Firma")
                        .WithMany("Tanimlar")
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Firma");
                });

            modelBuilder.Entity("KYS.Entity.Vekalet", b =>
                {
                    b.HasOne("KYS.Entity.Firma", null)
                        .WithMany("Vekaletler")
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KYS.Entity.Personel", "VekaletiAlanPersonel")
                        .WithMany("VekaletlerAlan")
                        .HasForeignKey("VekaletiAlanPersonelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KYS.Entity.Personel", "VekaletiVerenPersonel")
                        .WithMany("VekaletlerVeren")
                        .HasForeignKey("VekaletiVerenPersonelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("VekaletiAlanPersonel");

                    b.Navigation("VekaletiVerenPersonel");
                });

            modelBuilder.Entity("KYS.Entity.AracBilgi", b =>
                {
                    b.Navigation("AracFormlari");

                    b.Navigation("Fotograflar");
                });

            modelBuilder.Entity("KYS.Entity.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("KYS.Entity.Cihaz", b =>
                {
                    b.Navigation("CihazKalibrasyonlari");
                });

            modelBuilder.Entity("KYS.Entity.Departman", b =>
                {
                    b.Navigation("Personeller");

                    b.Navigation("Yoneticiler");
                });

            modelBuilder.Entity("KYS.Entity.Dokuman", b =>
                {
                    b.Navigation("DokumanOnaylar");
                });

            modelBuilder.Entity("KYS.Entity.Firma", b =>
                {
                    b.Navigation("AracBilgileri");

                    b.Navigation("Cihazlar");

                    b.Navigation("DepartmanYoneticileri");

                    b.Navigation("Departmanlar");

                    b.Navigation("Egitimler");

                    b.Navigation("Fotograflar");

                    b.Navigation("GelenMalzemeler");

                    b.Navigation("Onaylar");

                    b.Navigation("Personeller");

                    b.Navigation("Tanimlar");

                    b.Navigation("Vekaletler");

                    b.Navigation("kontrolMaddeleri");
                });

            modelBuilder.Entity("KYS.Entity.Musteri", b =>
                {
                    b.Navigation("Araclar");
                });

            modelBuilder.Entity("KYS.Entity.Personel", b =>
                {
                    b.Navigation("AracBilgileri");

                    b.Navigation("CihazKalibrasyonlari");

                    b.Navigation("DepartmanYoneticileri");

                    b.Navigation("Departmanlar");

                    b.Navigation("Egitimler");

                    b.Navigation("GelenMalzemeler");

                    b.Navigation("VekaletlerAlan");

                    b.Navigation("VekaletlerVeren");
                });
#pragma warning restore 612, 618
        }
    }
}
